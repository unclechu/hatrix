{-# LANGUAGE NoImplicitPrelude #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE UnicodeSyntax #-}

module Hatrix.GUI.Component
     ( Box (..)
     , UIElement (..)
     , EventSubscription (..)
     , Event (..)
     , Component (..)
     ) where

import           Hatrix.Prelude


data Box id
   = Vertical   [UIElement id]
   | Horizontal [UIElement id]
     deriving (Show, Eq)


data UIElement id
   = Label { label ‚à∑ Text }
   | TextInput { identifier ‚à∑ Maybe id, subscriptions ‚à∑ [EventSubscription] }
   | Button { identifier ‚à∑ Maybe id, subscriptions ‚à∑ [EventSubscription], label ‚à∑ Text }
     deriving (Show, Eq)


data EventSubscription
   = ValueChange
   | MouseClick
   | FocusStateChange
     deriving (Show, Eq)


data Event
   = ValueIsChanged Text
   | Clicked
   | Focus ùîπ
     deriving (Show, Eq)


data Monad m ‚áí Component id s m = Component s (s ‚Üí Maybe id ‚Üí Event ‚Üí m s) (Box id)
